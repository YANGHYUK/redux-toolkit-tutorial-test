{"ast":null,"code":"var _jsxFileName = \"/Users/wonki/coding/test/redux-toolkit-tutorial/src/components/Count/CountComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { minusCount, plusCount } from \"../../store/CountReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountComponent() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    number\n  } = useSelector(state => ({\n    number: state.countReducer.number\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(minusCount(number - 1)),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(plusCount(number + 1)),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountComponent, \"lQKqI4pdzvKpiKqEsUrOILZ6kjw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CountComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountComponent\");","map":{"version":3,"sources":["/Users/wonki/coding/test/redux-toolkit-tutorial/src/components/Count/CountComponent.tsx"],"names":["React","useSelector","useDispatch","minusCount","plusCount","CountComponent","dispatch","number","state","countReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAaN,WAAW,CAAEO,KAAD,KAAiB;AAC9CD,IAAAA,MAAM,EAAEC,KAAK,CAACC,YAAN,CAAmBF;AADmB,GAAjB,CAAD,CAA9B;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACH,UAAU,CAACI,MAAM,GAAG,CAAV,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACF,SAAS,CAACG,MAAM,GAAG,CAAV,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAbuBF,c;UACLH,W,EACED,W;;;KAFGI,c","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { minusCount, plusCount } from \"../../store/CountReducer\";\nexport default function CountComponent() {\n  const dispatch = useDispatch();\n  const { number } = useSelector((state: any) => ({\n    number: state.countReducer.number,\n  }));\n\n  return (\n    <div>\n      <button onClick={() => dispatch(minusCount(number - 1))}>-</button>\n      <span>{number}</span>\n      <button onClick={() => dispatch(plusCount(number + 1))}>+</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}