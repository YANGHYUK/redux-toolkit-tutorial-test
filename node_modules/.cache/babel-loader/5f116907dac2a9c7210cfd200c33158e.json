{"ast":null,"code":"import axios from \"axios\";\nimport { // AsyncThunk,\ncreateAsyncThunk, createSlice // Slice,\n} from \"@reduxjs/toolkit\";\nexport const getList = createAsyncThunk(\"getList\", async () => {\n  const response = await axios.get(\"http://localhost:8000/list\");\n  return response.data;\n});\nexport const addList = createAsyncThunk(\"addList\", async newList => {\n  console.log({\n    newList\n  }, \"89089080\");\n  const response = await axios.post(\"http://localhost:8000/list\", newList);\n  return response.data;\n});\nconst initialState = {\n  loading: \"idle\",\n  error: undefined,\n  list: []\n};\nexport const todoReducer = createSlice({\n  name: \"todoList\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getList.pending, state => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(getList.fulfilled, (state, {\n      payload\n    }) => {\n      state.loading = \"idle\";\n      state.error = undefined;\n      state.list = payload;\n    });\n    builder.addCase(getList.rejected, (state, {\n      payload\n    }) => {\n      state.loading = \"idle\";\n      state.error = payload;\n    });\n    builder.addCase(addList.pending, state => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(addList.fulfilled, (state, {\n      payload\n    }) => {\n      state.loading = \"idle\";\n      state.error = undefined;\n      state.list = state.list.concat(payload);\n    });\n    builder.addCase(addList.rejected, (state, {\n      payload\n    }) => {\n      state.loading = \"idle\";\n      state.error = payload;\n    });\n  }\n});\nexport default todoReducer.reducer;","map":{"version":3,"sources":["/Users/wonki/coding/test/redux-toolkit-tutorial/src/store/TodoReducer/index.ts"],"names":["axios","createAsyncThunk","createSlice","getList","response","get","data","addList","newList","console","log","post","initialState","loading","error","undefined","list","todoReducer","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","concat","reducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACE;AACAC,gBAFF,EAGEC,WAHF,CAIE;AAJF,OAKO,kBALP;AAOA,OAAO,MAAMC,OAAO,GAAGF,gBAAgB,CAAC,SAAD,EAAY,YAAY;AAC7D,QAAMG,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,4BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHsC,CAAhC;AAKP,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CAAC,SAAD,EAAY,MAAOO,OAAP,IAAwB;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ,EAAyB,UAAzB;AACA,QAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAN,CAAW,4BAAX,EAAyCH,OAAzC,CAAvB;AACA,SAAOJ,QAAQ,CAACE,IAAhB;AACD,CAJsC,CAAhC;AAYP,MAAMM,YAAuB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,MADqB;AAE9BC,EAAAA,KAAK,EAAEC,SAFuB;AAG9BC,EAAAA,IAAI,EAAE;AAHwB,CAAhC;AAMA,OAAO,MAAMC,WAAW,GAAGf,WAAW,CAAC;AACrCgB,EAAAA,IAAI,EAAE,UAD+B;AAErCN,EAAAA,YAFqC;AAGrCO,EAAAA,QAAQ,EAAE,EAH2B;AAIrCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,OAAO,CAACoB,OAAxB,EAAkCC,KAAD,IAAW;AAC1CA,MAAAA,KAAK,CAACX,OAAN,GAAgB,SAAhB;AACD,KAFD;AAGAQ,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,OAAO,CAACsB,SAAxB,EAAmC,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACzDF,MAAAA,KAAK,CAACX,OAAN,GAAgB,MAAhB;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcC,SAAd;AACAS,MAAAA,KAAK,CAACR,IAAN,GAAaU,OAAb;AACD,KAJD;AAKAL,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,OAAO,CAACwB,QAAxB,EAAkC,CAACH,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACxDF,MAAAA,KAAK,CAACX,OAAN,GAAgB,MAAhB;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcY,OAAd;AACD,KAHD;AAKAL,IAAAA,OAAO,CAACC,OAAR,CAAgBf,OAAO,CAACgB,OAAxB,EAAkCC,KAAD,IAAW;AAC1CA,MAAAA,KAAK,CAACX,OAAN,GAAgB,SAAhB;AACD,KAFD;AAGAQ,IAAAA,OAAO,CAACC,OAAR,CAAgBf,OAAO,CAACkB,SAAxB,EAAmC,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACzDF,MAAAA,KAAK,CAACX,OAAN,GAAgB,MAAhB;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcC,SAAd;AACAS,MAAAA,KAAK,CAACR,IAAN,GAAaQ,KAAK,CAACR,IAAN,CAAWY,MAAX,CAAkBF,OAAlB,CAAb;AACD,KAJD;AAKAL,IAAAA,OAAO,CAACC,OAAR,CAAgBf,OAAO,CAACoB,QAAxB,EAAkC,CAACH,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACxDF,MAAAA,KAAK,CAACX,OAAN,GAAgB,MAAhB;AACAW,MAAAA,KAAK,CAACV,KAAN,GAAcY,OAAd;AACD,KAHD;AAID;AA9BoC,CAAD,CAA/B;AAiCP,eAAeT,WAAW,CAACY,OAA3B","sourcesContent":["import axios from \"axios\";\n\nimport {\n  // AsyncThunk,\n  createAsyncThunk,\n  createSlice,\n  // Slice,\n} from \"@reduxjs/toolkit\";\n\nexport const getList = createAsyncThunk(\"getList\", async () => {\n  const response = await axios.get(\"http://localhost:8000/list\");\n  return response.data;\n});\n\nexport const addList = createAsyncThunk(\"addList\", async (newList: any) => {\n  console.log({ newList }, \"89089080\");\n  const response = await axios.post(\"http://localhost:8000/list\", newList);\n  return response.data;\n});\n\nexport type TodoState = {\n  loading: \"idle\" | \"pending\";\n  error: undefined | unknown;\n  list: any;\n};\n\nconst initialState: TodoState = {\n  loading: \"idle\",\n  error: undefined,\n  list: [],\n};\n\nexport const todoReducer = createSlice({\n  name: \"todoList\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getList.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(getList.fulfilled, (state, { payload }) => {\n      state.loading = \"idle\";\n      state.error = undefined;\n      state.list = payload;\n    });\n    builder.addCase(getList.rejected, (state, { payload }) => {\n      state.loading = \"idle\";\n      state.error = payload;\n    });\n\n    builder.addCase(addList.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(addList.fulfilled, (state, { payload }) => {\n      state.loading = \"idle\";\n      state.error = undefined;\n      state.list = state.list.concat(payload);\n    });\n    builder.addCase(addList.rejected, (state, { payload }) => {\n      state.loading = \"idle\";\n      state.error = payload;\n    });\n  },\n});\n\nexport default todoReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}