{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getList = createAsyncThunk(\"GET_TODO\", async () => {\n  const response = await axios.get(\"http://localhost:8000/list\");\n  return response.data;\n}); // type todoReducerType {\n//   name: string;\n//   initialState: any;\n//   reducers: any;\n//   extraReducers: any;\n// }\n\nexport const todoReducer = createSlice({\n  name: \"todoList\",\n  initialState: [],\n  reducers: {},\n  extraReducers: {// [getList.fulfilled]: (state, { payload }) => [...payload],\n  }\n});","map":{"version":3,"sources":["/Users/wonki/coding/test/redux-toolkit-tutorial/src/store/TodoReducer/index.ts"],"names":["axios","createAsyncThunk","createSlice","getList","response","get","data","todoReducer","name","initialState","reducers","extraReducers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEEC,gBAFF,EAGEC,WAHF,QAKO,kBALP;AAOA,OAAO,MAAMC,OAAkC,GAAGF,gBAAgB,CAChE,UADgE,EAEhE,YAAY;AACV,QAAMG,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,4BAAV,CAAvB;AAEA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAN+D,CAA3D,C,CASP;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAKZ,GAAGL,WAAW,CAAC;AACdM,EAAAA,IAAI,EAAE,UADQ;AAEdC,EAAAA,YAAY,EAAE,EAFA;AAGdC,EAAAA,QAAQ,EAAE,EAHI;AAIdC,EAAAA,aAAa,EAAE,CACb;AADa;AAJD,CAAD,CALR","sourcesContent":["import axios from \"axios\";\nimport {\n  AsyncThunk,\n  createAsyncThunk,\n  createSlice,\n  Slice,\n} from \"@reduxjs/toolkit\";\n\nexport const getList: AsyncThunk<any, void, {}> = createAsyncThunk(\n  \"GET_TODO\",\n  async () => {\n    const response = await axios.get(\"http://localhost:8000/list\");\n\n    return response.data;\n  }\n);\n\n// type todoReducerType {\n//   name: string;\n//   initialState: any;\n//   reducers: any;\n//   extraReducers: any;\n// }\n\nexport const todoReducer: {\n  name?: string;\n  initialState?: any;\n  reducers?: any;\n  extraReducers: any;\n} = createSlice({\n  name: \"todoList\",\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    // [getList.fulfilled]: (state, { payload }) => [...payload],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}